{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Allen\\\\KodeHode\\\\React\\\\LoginSystem_Mern\\\\frontEnd\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forgot() {\n  _s();\n  const [email, setEmail] = React.useState(null);\n  function handleChange(event) {\n    //setItemName((prev) => (prev = event.target.value));\n    setEmail(event.target.value);\n  }\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const url = \"http://localhost:3500/resetPassword\";\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email\n      })\n    };\n    await fetch(url, requestOptions).then(response => {\n      if (response.status === 200) {\n        swal(\"Reset Link sent to your email \");\n      } else {\n        swal(\"Please Enter the registered emailId\");\n      }\n      console.log(\"Reset link sent\", response);\n    }).catch(error => console.log(\"Form submit error\", error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"reset-input\",\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Send reset link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Forgot, \"MIf0ox0X7PbEj07NYfRfM2RH6OE=\");\n_c = Forgot;\nvar _c;\n$RefreshReg$(_c, \"Forgot\");","map":{"version":3,"names":["React","useState","swal","Forgot","email","setEmail","handleChange","event","target","value","handleSubmit","preventDefault","url","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","status","console","log","catch","error"],"sources":["C:/Users/Allen/KodeHode/React/LoginSystem_Mern/frontEnd/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport default function Forgot() {\r\n  const [email, setEmail] = React.useState(null);\r\n\r\n  function handleChange(event) {\r\n    //setItemName((prev) => (prev = event.target.value));\r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const url = \"http://localhost:3500/resetPassword\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email: email }),\r\n    };\r\n\r\n    await fetch(url, requestOptions)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          swal(\"Reset Link sent to your email \");\r\n        } else {\r\n          swal(\"Please Enter the registered emailId\");\r\n        }\r\n        console.log(\"Reset link sent\", response);\r\n      })\r\n      .catch((error) => console.log(\"Form submit error\", error));\r\n  }\r\n\r\n  return (\r\n    <div className=\"forgot\">\r\n      <form>\r\n        <input\r\n          className=\"reset-input\"\r\n          type=\"email\"\r\n          placeholder=\"Enter Email\"\r\n          onChange={handleChange}\r\n        ></input>\r\n        <button className=\"reset-button\" type=\"submit\" onClick={handleSubmit}>\r\n          Send reset link\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,YAAY;AAAC;AAE9B,eAAe,SAASC,MAAM,GAAG;EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,KAAK,CAACC,QAAQ,CAAC,IAAI,CAAC;EAE9C,SAASK,YAAY,CAACC,KAAK,EAAE;IAC3B;IACAF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B;EAEA,eAAeC,YAAY,CAACH,KAAK,EAAE;IACjCA,KAAK,CAACI,cAAc,EAAE;IAEtB,MAAMC,GAAG,GAAG,qCAAqC;IACjD,MAAMC,cAAc,GAAG;MACrBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,6BAA6B,EAAE,GAAG;QAClC,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,KAAK,EAAEA;MAAM,CAAC;IACvC,CAAC;IAED,MAAMe,KAAK,CAACP,GAAG,EAAEC,cAAc,CAAC,CAC7BO,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3BpB,IAAI,CAAC,gCAAgC,CAAC;MACxC,CAAC,MAAM;QACLA,IAAI,CAAC,qCAAqC,CAAC;MAC7C;MACAqB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,QAAQ,CAAC;IAC1C,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEE,KAAK,CAAC,CAAC;EAC9D;EAEA,oBACE;IAAK,SAAS,EAAC,QAAQ;IAAA,uBACrB;MAAA,wBACE;QACE,SAAS,EAAC,aAAa;QACvB,IAAI,EAAC,OAAO;QACZ,WAAW,EAAC,aAAa;QACzB,QAAQ,EAAEpB;MAAa;QAAA;QAAA;QAAA;MAAA,QAChB,eACT;QAAQ,SAAS,EAAC,cAAc;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEI,YAAa;QAAA,UAAC;MAEtE;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAhDuBP,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}