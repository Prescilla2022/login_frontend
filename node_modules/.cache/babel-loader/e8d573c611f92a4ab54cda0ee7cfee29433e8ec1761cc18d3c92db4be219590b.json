{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Allen\\\\KodeHode\\\\React\\\\LoginSystem_Mern\\\\frontEnd\\\\src\\\\components\\\\ResetNewPassword.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetNewPassword() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const {\n    id,\n    resetToken\n  } = useParams();\n  const navigate = useNavigate();\n  console.log(id);\n  console.log(resetToken);\n  function handlePassword(e) {\n    setPassword(e.target.value);\n    console.log(password);\n  }\n  function handleConfirmPassword(e) {\n    setConfirmPassword(e.target.value);\n    console.log(confirmPassword);\n  }\n  async function handleSubmit() {\n    const passwordMatch = password === confirmPassword;\n    console.log(passwordMatch);\n    const url = \"http://localhost:3500/updatePassword\";\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password: password,\n        id: id,\n        resetToken: resetToken\n      })\n    };\n    if (passwordMatch) {\n      await fetch(url, requestOptions).then(response => {\n        console.log(response.status);\n        if (response.status === 201) {\n          // console.log(response);\n          // navigate(\"/UpdatedStatus\");\n          // <Navigate to=\"/UpdatedStatus\" replace={true} />;\n          swal(\"Password updated successfully\");\n        } else if (response.status === 400) {\n          swal(\"Password not updated\");\n        }\n      });\n\n      //.catch((error) => console.log(\"Form submit error\", error));\n    } else {\n      swal(\"Password doesnot match\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handlePassword,\n        type: \"password\",\n        placeholder: \"Enter New Password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleConfirmPassword,\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        name: \"confirmPassword\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetNewPassword, \"+cUmxojvFFZ8e9U2yk/QFJOrUpE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetNewPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetNewPassword\");","map":{"version":3,"names":["React","useState","useParams","swal","useNavigate","Navigate","ResetNewPassword","password","setPassword","confirmPassword","setConfirmPassword","id","resetToken","navigate","console","log","handlePassword","e","target","value","handleConfirmPassword","handleSubmit","passwordMatch","url","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","status"],"sources":["C:/Users/Allen/KodeHode/React/LoginSystem_Mern/frontEnd/src/components/ResetNewPassword.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport default function ResetNewPassword() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const { id, resetToken } = useParams();\r\n  const navigate = useNavigate();\r\n  console.log(id);\r\n  console.log(resetToken);\r\n\r\n  function handlePassword(e) {\r\n    setPassword(e.target.value);\r\n    console.log(password);\r\n  }\r\n  function handleConfirmPassword(e) {\r\n    setConfirmPassword(e.target.value);\r\n    console.log(confirmPassword);\r\n  }\r\n\r\n  async function handleSubmit() {\r\n    const passwordMatch = password === confirmPassword;\r\n    console.log(passwordMatch);\r\n    const url = \"http://localhost:3500/updatePassword\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        password: password,\r\n        id: id,\r\n        resetToken: resetToken,\r\n      }),\r\n    };\r\n    if (passwordMatch) {\r\n      await fetch(url, requestOptions).then((response) => {\r\n        console.log(response.status);\r\n        if (response.status === 201) {\r\n          // console.log(response);\r\n          // navigate(\"/UpdatedStatus\");\r\n          // <Navigate to=\"/UpdatedStatus\" replace={true} />;\r\n          swal(\"Password updated successfully\");\r\n        } else if (response.status === 400) {\r\n          swal(\"Password not updated\");\r\n        }\r\n      });\r\n\r\n      //.catch((error) => console.log(\"Form submit error\", error));\r\n    } else {\r\n      swal(\"Password doesnot match\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <h3>Reset Password</h3>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <input\r\n          onChange={handlePassword}\r\n          type=\"password\"\r\n          placeholder=\"Enter New Password\"\r\n          name=\"password\"\r\n        ></input>\r\n        <input\r\n          onChange={handleConfirmPassword}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"confirmPassword\"\r\n        ></input>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}