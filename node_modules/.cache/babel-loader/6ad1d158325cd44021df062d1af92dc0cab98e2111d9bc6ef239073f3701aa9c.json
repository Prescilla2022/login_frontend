{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Allen/KodeHode/React/LoginSystem_Mern/frontEnd/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Allen/KodeHode/React/LoginSystem_Mern/frontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Allen/KodeHode/React/LoginSystem_Mern/frontEnd/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{useState}from\"react\";import{useParams}from\"react-router-dom\";import swal from\"sweetalert\";import{useNavigate}from\"react-router-dom\";import{Navigate}from\"react-router-dom\";import Modal from\"./Modal\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ResetNewPassword(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),confirmPassword=_useState4[0],setConfirmPassword=_useState4[1];var _useParams=useParams(),id=_useParams.id,resetToken=_useParams.resetToken;var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),open=_useState6[0],setOpen=_useState6[1];var navigate=useNavigate();console.log(id);console.log(resetToken);function handlePassword(e){setPassword(e.target.value);console.log(password);}function handleConfirmPassword(e){setConfirmPassword(e.target.value);console.log(confirmPassword);}var handleClose=function handleClose(){setOpen(true);};var handleOpen=function handleOpen(){setOpen(true);};function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event){var passwordMatch,url,requestOptions;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:event.preventDefault();passwordMatch=password===confirmPassword;console.log(passwordMatch);url=\"http://localhost:3500/updatePassword\";requestOptions={method:\"POST\",headers:{\"Access-Control-Allow-Origin\":\"*\",\"content-type\":\"application/json\"},body:JSON.stringify({password:password,id:id,resetToken:resetToken})};if(!passwordMatch){_context.next=10;break;}_context.next=8;return fetch(url,requestOptions).then(function(response){console.log(response.status);if(response.status===201){// console.log(response);\nnavigate(\"/UpdatedStatus\");// <Navigate to=\"/UpdatedStatus\" replace={true} />;\n// swal(\"Password updated successfully\");\n}else if(response.status===400){swal(\"Password not updated\");}});case 8:_context.next=11;break;case 10:// swal(\"Password doesnot match\");\nhandleOpen();case 11:case\"end\":return _context.stop();}},_callee);}));return _handleSubmit.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:\"register\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Reset Password\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{onChange:handlePassword,type:\"password\",placeholder:\"Enter New Password\",name:\"password\"}),/*#__PURE__*/_jsx(\"input\",{onChange:handleConfirmPassword,type:\"password\",placeholder:\"Confirm Password\",name:\"confirmPassword\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Register\"}),open&&/*#__PURE__*/_jsx(Modal,{})]})]});}","map":{"version":3,"names":["React","useState","useParams","swal","useNavigate","Navigate","Modal","ResetNewPassword","password","setPassword","confirmPassword","setConfirmPassword","id","resetToken","open","setOpen","navigate","console","log","handlePassword","e","target","value","handleConfirmPassword","handleClose","handleOpen","handleSubmit","event","preventDefault","passwordMatch","url","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","status"],"sources":["C:/Users/Allen/KodeHode/React/LoginSystem_Mern/frontEnd/src/components/ResetNewPassword.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Modal from \"./Modal\";\r\n\r\nexport default function ResetNewPassword() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const { id, resetToken } = useParams();\r\n  const [open, setOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n  console.log(id);\r\n  console.log(resetToken);\r\n\r\n  function handlePassword(e) {\r\n    setPassword(e.target.value);\r\n    console.log(password);\r\n  }\r\n  function handleConfirmPassword(e) {\r\n    setConfirmPassword(e.target.value);\r\n    console.log(confirmPassword);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const passwordMatch = password === confirmPassword;\r\n    console.log(passwordMatch);\r\n    const url = \"http://localhost:3500/updatePassword\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        password: password,\r\n        id: id,\r\n        resetToken: resetToken,\r\n      }),\r\n    };\r\n    if (passwordMatch) {\r\n      await fetch(url, requestOptions).then((response) => {\r\n        console.log(response.status);\r\n        if (response.status === 201) {\r\n          // console.log(response);\r\n          navigate(\"/UpdatedStatus\");\r\n          // <Navigate to=\"/UpdatedStatus\" replace={true} />;\r\n\r\n          // swal(\"Password updated successfully\");\r\n        } else if (response.status === 400) {\r\n          swal(\"Password not updated\");\r\n        }\r\n      });\r\n\r\n      //.catch((error) => console.log(\"Form submit error\", error));\r\n    } else {\r\n      // swal(\"Password doesnot match\");\r\n      handleOpen();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <h3>Reset Password</h3>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <input\r\n          onChange={handlePassword}\r\n          type=\"password\"\r\n          placeholder=\"Enter New Password\"\r\n          name=\"password\"\r\n        ></input>\r\n        <input\r\n          onChange={handleConfirmPassword}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"confirmPassword\"\r\n        ></input>\r\n        <button type=\"submit\">Register</button>\r\n        {open && <Modal />}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}